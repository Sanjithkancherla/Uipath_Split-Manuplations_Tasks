<Activity mc:Ignorable="sap sap2010" x:Class="extract_data_from_pdf" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="516,2125" sap2010:WorkflowViewState.IdRef="extract_data_from_pdf_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="16">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Extract_Data_From_PDF_Files" sap:VirtualizedContainerService.HintSize="496,2065" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Input_PdfFilePath" />
      <Variable x:TypeArguments="str:RegexOptions" Name="RegexOptions" />
      <Variable x:TypeArguments="x:String" Name="Output_NotepadPath" />
      <Variable x:TypeArguments="x:Boolean" Name="OutputFile_Exist" />
      <Variable x:TypeArguments="x:String" Name="EmptyLine_Removed_Data" />
      <Variable x:TypeArguments="s:String[]" Name="Splited_PDFData" />
      <Variable x:TypeArguments="x:Int32" Name="Find_IndexOf_StartLine_Element" />
      <Variable x:TypeArguments="x:String" Name="Find_StartDate_Element" />
      <Variable x:TypeArguments="x:String" Name="Find_EndLine_Element" />
      <Variable x:TypeArguments="x:Int32" Name="Find_IndexOf_EndLine_Element" />
      <Variable x:TypeArguments="s:String[]" Name="Split_Element_To_Extract_Data" />
      <Variable x:TypeArguments="x:String" Name="Out_PDFData" />
      <Variable x:TypeArguments="s:String[]" Name="files" />
      <Variable x:TypeArguments="x:String" Name="Extracted_Data" />
      <Variable x:TypeArguments="s:String[]" Name="Init_Header_Values" />
      <Variable x:TypeArguments="s:DateTime" Name="StartTime" />
      <Variable x:TypeArguments="x:TimeSpan" Name="Duration" />
      <Variable x:TypeArguments="s:DateTime" Name="EndTime" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment sap:VirtualizedContainerService.HintSize="454,93" sap2010:WorkflowViewState.IdRef="Comment_1" Text="//Extract specified data from all pdf files inside the folder &#xD;&#xA;and update extracted data into notepad file" />
    <Assign DisplayName="Assign(Start Time)" sap:VirtualizedContainerService.HintSize="454,60" sap2010:WorkflowViewState.IdRef="Assign_57">
      <Assign.To>
        <OutArgument x:TypeArguments="s:DateTime">[StartTime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:DateTime">[datetime.Now]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message(Start Time)" sap:VirtualizedContainerService.HintSize="454,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Execution Startedtime: &quot;+StartTime.ToString]" />
    <Assign DisplayName="Assign(Input PDFFiles Folder Path)" sap:VirtualizedContainerService.HintSize="454,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Input_PdfFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">C:\Users\rathina.krithika\Desktop\Uipath Repo\Split_Snippets_Tasks\Input\005_Input_Extract_PDF_Details\</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign(Output Notepad File Path)" sap:VirtualizedContainerService.HintSize="454,60" sap2010:WorkflowViewState.IdRef="Assign_33">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Output_NotepadPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["C:\Users\rathina.krithika\Desktop\Uipath Repo\Split_Snippets_Tasks\Output\005_Out_PDFExtract.txt"]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="(Delete Already Exist Output File)" sap:VirtualizedContainerService.HintSize="454,66" sap2010:WorkflowViewState.IdRef="Sequence_29">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:PathExists DisplayName="Path Exists(Checks Notepad File Exists Or Not)" Exists="[OutputFile_Exist]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[Output_NotepadPath]" PathType="File" />
      <If Condition="[OutputFile_Exist]" DisplayName="If(Check Output File Exist Or Not)" sap:VirtualizedContainerService.HintSize="484,262" sap2010:WorkflowViewState.IdRef="If_9">
        <If.Then>
          <Sequence DisplayName="Delete Already Existing File" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_28">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_4" Path="[Output_NotepadPath]" />
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="For Each File in Folder" sap:VirtualizedContainerService.HintSize="454,1303" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign(Get Files From Directory)" sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[files]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(Input_PdfFilePath)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each file(Loop into Files)" sap:VirtualizedContainerService.HintSize="412,1111" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[files]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="file" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,977" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <WriteLine DisplayName="Write line(Print FileNames)" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[file]" />
              <ui:AppendLine DisplayName="Append Line(Update FileName Into Notepad)" FileName="[Output_NotepadPath]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_10" Text="[vbNewLine+&quot;FileName: &quot; +file +vbNewLine]" />
              <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text(Pdf File)" FileName="[file.ToString]" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ReadPDFText_2" Range="All" Text="[Out_PDFData]" />
              <Flowchart DisplayName="(Extract Data From PDF)" sap:VirtualizedContainerService.HintSize="634,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                    <av:Size x:Key="ShapeSize">60,75</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,187</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Flowchart.StartNode>
                  <x:Reference>__ReferenceID7</x:Reference>
                </Flowchart.StartNode>
                <FlowStep x:Name="__ReferenceID7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,187</av:Point>
                      <av:Size x:Key="ShapeSize">200,66</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">300,253 300,297</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Remove Empty Lines And Split String Data" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_31">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign(Remove Empty Lines)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[EmptyLine_Removed_Data]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Out_PDFData, "^\s+$[\r\n]*", String.Empty,RegexOptions.Multiline)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign(Split String PDF Data)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">[Splited_PDFData]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">[EmptyLine_Removed_Data.Split ({system.Environment.NewLine },StringSplitOptions .None )]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">200,297</av:Point>
                          <av:Size x:Key="ShapeSize">200,66</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">300,363 300,424.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Find_IndexOf_Specific_Data's (PDF Data)" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_33">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign(Find Startwith Element In Array)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Find_StartDate_Element]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Array.Find(Splited_PDFData, Function(x) (x.StartsWith("  Start Date:")))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign(Find IndexOf An Element In Array)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[Find_IndexOf_StartLine_Element]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[Array.IndexOf(Splited_PDFData, Find_StartDate_Element)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign(Find Startwith Element In Array)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Find_EndLine_Element]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Array.Find(Splited_PDFData, Function(x) (x.StartsWith("*To obtain machine name")))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign(Find IndexOf An Element In Array)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[Find_IndexOf_EndLine_Element]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[Array.IndexOf(Splited_PDFData, Find_EndLine_Element)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">200,424.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,51</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <While DisplayName="While(Loop into Specific Range Of Data)" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="While_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <While.Condition>[Find_IndexOf_StartLine_Element&lt;Find_IndexOf_EndLine_Element]</While.Condition>
                            <Sequence DisplayName="Extract PDF Data " sap:VirtualizedContainerService.HintSize="376,907" sap2010:WorkflowViewState.IdRef="Sequence_42">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="(Split Particular Line Data)" sap:VirtualizedContainerService.HintSize="334,352" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="Find_Element" />
                                  <Variable x:TypeArguments="x:String" Name="Replace_Emptyspace_In_Element" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign(Element In Array)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[Find_Element]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[Splited_PDFData(Find_IndexOf_StartLine_Element)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign(Apply \ In Empty Space Of Element)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[Replace_Emptyspace_In_Element]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Find_Element, “[\s+]”, “\”)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign(Split Element To Extract Data)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[Split_Element_To_Extract_Data]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Split(Replace_Emptyspace_In_Element, “\W{2,}”)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                              <Assign DisplayName="Assign(Initiliaze Extract Data Variable)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[Extracted_Data]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each(Loop Into Splited Element-To Extract Data)" sap:VirtualizedContainerService.HintSize="562,717" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Split_Element_To_Extract_Data]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body(Checks Splited Data)" sap:VirtualizedContainerService.HintSize="526,583" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign(Initilaize Header Values)" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_51">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:String[]">[Init_Header_Values]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:String[]">[{"Start Date","End Date","Requester s Name","ISID","Computer Name","Country and Division","Computer OS"}]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[item.ToString&lt;&gt;&quot;&quot;]" DisplayName="If(Checks _Splited_Data_Should_Not_Be_Empty)" sap:VirtualizedContainerService.HintSize="484,391" sap2010:WorkflowViewState.IdRef="If_12">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="304,243" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="Splited_Data" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Assign(Replace \ to Empty In Element" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[Splited_Data]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(item.ToString, “\W”, “ ”)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Flowchart DisplayName="(Checks Splited Data is Available In Header Array Or Not)" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <av:Point x:Key="ShapeLocation">330,2.5</av:Point>
                                                  <av:Size x:Key="ShapeSize">60,75</av:Size>
                                                  <av:PointCollection x:Key="ConnectorLocation">360,77.5 360,116.5</av:PointCollection>
                                                  <x:Double x:Key="Width">1496</x:Double>
                                                  <x:Double x:Key="Height">658.08</x:Double>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Flowchart.StartNode>
                                                <x:Reference>__ReferenceID4</x:Reference>
                                              </Flowchart.StartNode>
                                              <FlowDecision x:Name="__ReferenceID4" Condition="[Array.IndexOf(Init_Header_Values,Splited_Data)=-1]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <av:Point x:Key="ShapeLocation">320.5,116.5</av:Point>
                                                    <av:Size x:Key="ShapeSize">79,87</av:Size>
                                                    <av:PointCollection x:Key="TrueConnector">320.5,160 271,160</av:PointCollection>
                                                    <av:PointCollection x:Key="FalseConnector">399.5,160 460,160 460,236.5</av:PointCollection>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <FlowDecision.True>
                                                  <FlowStep x:Name="__ReferenceID3">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <av:Point x:Key="ShapeLocation">9,130</av:Point>
                                                        <av:Size x:Key="ShapeSize">262,60</av:Size>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign DisplayName="Assign(Concate Splited Data's)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[Extracted_Data]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[Extracted_Data+" "+Splited_Data]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </FlowStep>
                                                </FlowDecision.True>
                                                <FlowDecision.False>
                                                  <FlowDecision x:Name="__ReferenceID0" Condition="[Extracted_Data&lt;&gt;&quot;&quot;]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <av:Point x:Key="ShapeLocation">420.5,236.5</av:Point>
                                                        <av:Size x:Key="ShapeSize">79,87</av:Size>
                                                        <av:PointCollection x:Key="TrueConnector">420.5,280 311,280</av:PointCollection>
                                                        <av:PointCollection x:Key="FalseConnector">499.5,280 580,280 580,360</av:PointCollection>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <FlowDecision.True>
                                                      <FlowStep x:Name="__ReferenceID1">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <av:Point x:Key="ShapeLocation">49,250</av:Point>
                                                            <av:Size x:Key="ShapeSize">262,60</av:Size>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Assign DisplayName="Assign(Concate Splited Data's)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[Extracted_Data]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[Extracted_Data+vbNewLine+Splited_Data+":"]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </FlowStep>
                                                    </FlowDecision.True>
                                                    <FlowDecision.False>
                                                      <FlowStep x:Name="__ReferenceID2">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <av:Point x:Key="ShapeLocation">449,360</av:Point>
                                                            <av:Size x:Key="ShapeSize">262,60</av:Size>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Assign DisplayName="Assign(Concate Splited Data's)" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[Extracted_Data]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[Extracted_Data+Splited_Data+":"]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </FlowStep>
                                                    </FlowDecision.False>
                                                  </FlowDecision>
                                                </FlowDecision.False>
                                              </FlowDecision>
                                              <x:Reference>__ReferenceID0</x:Reference>
                                              <x:Reference>__ReferenceID1</x:Reference>
                                              <x:Reference>__ReferenceID2</x:Reference>
                                              <x:Reference>__ReferenceID3</x:Reference>
                                            </Flowchart>
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                              <ui:AppendLine DisplayName="Append Line(Update Data Into NotePad)" FileName="[Output_NotepadPath]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_11" Text="[Extracted_Data]" />
                              <Assign DisplayName="Assign(Increament For Next Element)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[Find_IndexOf_StartLine_Element]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Find_IndexOf_StartLine_Element+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </While>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
                <x:Reference>__ReferenceID5</x:Reference>
                <x:Reference>__ReferenceID6</x:Reference>
              </Flowchart>
              <Assign DisplayName="Assign(End Time)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[EndTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[datetime.Now]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message(End Time)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Execution ended time: &quot; +EndTime.ToString]" />
              <Assign DisplayName="Assign(Duration)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:TimeSpan">[Duration]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:TimeSpan">[EndTime-StartTime]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message(Duration)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Process Duration:  &quot;+Duration.ToString]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
  </Sequence>
</Activity>